#!/usr/bin/env node

import mongoose from 'mongoose';
import dotenv from 'dotenv';

dotenv.config();

async function clearDatabase() {
  try {
    console.log('üîó Connexion √† MongoDB...');
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    console.log('‚úÖ Connect√© √† MongoDB');
    
    const db = mongoose.connection.db;
    
    // Obtenir la liste de toutes les collections
    const collections = await db.listCollections().toArray();
    
    if (collections.length === 0) {
      console.log('üì≠ Aucune collection trouv√©e dans la base de donn√©es');
      return;
    }

    console.log(`üóÇÔ∏è  ${collections.length} collection(s) trouv√©e(s):`);
    collections.forEach(collection => {
      console.log(`   - ${collection.name}`);
    });

    console.log('\nüóëÔ∏è  Suppression de toutes les collections...');
    
    // Supprimer toutes les collections
    for (const collection of collections) {
      await db.collection(collection.name).drop();
      console.log(`   ‚úÖ Collection "${collection.name}" supprim√©e`);
    }

    console.log('\nüéâ Base de donn√©es vid√©e avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du vidage de la base de donn√©es:', error.message);
    process.exit(1);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Connexion ferm√©e');
    process.exit(0);
  }
}

// Demander confirmation avant de proc√©der
console.log('‚ö†Ô∏è  ATTENTION: Cette op√©ration va SUPPRIMER TOUTES LES DONN√âES de la base de donn√©es !');
console.log(`üìç Base de donn√©es: ${process.env.MONGODB_URI || 'mongodb://localhost:27017/invoice-app'}`);
console.log('\nPour continuer, tapez "OUI" et appuyez sur Entr√©e:');

process.stdin.setEncoding('utf8');
process.stdin.on('readable', () => {
  const chunk = process.stdin.read();
  if (chunk !== null) {
    const input = chunk.trim().toUpperCase();
    if (input === 'OUI') {
      clearDatabase();
    } else {
      console.log('‚ùå Op√©ration annul√©e');
      process.exit(0);
    }
  }
});
