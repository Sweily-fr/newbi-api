#!/usr/bin/env node

import { fileURLToPath } from 'url';
import { dirname } from 'path';
import { createInterface } from 'readline';
import createDemoAccount from './create-demo-account.js';

// Configuration ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

/**
 * Script d'ex√©cution simple pour cr√©er le compte d√©mo
 * Usage: node scripts/run-demo-creation.js
 */

console.log('üéØ CR√âATION DE COMPTE D√âMO NEWBI');
console.log('================================');
console.log('Ce script va cr√©er un compte d√©mo complet avec :');
console.log('‚Ä¢ 1 utilisateur d√©mo (demo@newbi.fr)');
console.log('‚Ä¢ 3 clients factices');
console.log('‚Ä¢ 3 factures (compl√©t√©e, en attente, brouillon)');
console.log('‚Ä¢ 2 devis (accept√©, en attente)');
console.log('‚Ä¢ 1 avoir');
console.log('‚Ä¢ 3 d√©penses');
console.log('');

// Fonction pour demander confirmation (compatible ES modules)
function askConfirmation() {
  return new Promise((resolve) => {
    const readline = createInterface({
      input: process.stdin,
      output: process.stdout
    });

    readline.question('Voulez-vous continuer ? (y/N): ', (answer) => {
      readline.close();
      resolve(answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes');
    });
  });
}

async function main() {
  try {
    // V√©rifier les arguments de ligne de commande
    const args = process.argv.slice(2);
    const forceMode = args.includes('--force') || args.includes('-f');
    
    if (!forceMode) {
      console.log('‚ö†Ô∏è  ATTENTION: Si un compte d√©mo existe d√©j√†, il sera supprim√© et recr√©√©.');
      console.log('');
      
      const confirmed = await askConfirmation();
      if (!confirmed) {
        console.log('‚ùå Op√©ration annul√©e par l\'utilisateur');
        process.exit(0);
      }
    }

    console.log('');
    console.log('üöÄ Lancement de la cr√©ation du compte d√©mo...');
    console.log('');

    // Ex√©cuter le script de cr√©ation
    await createDemoAccount();

    console.log('');
    console.log('üéâ SUCC√àS ! Le compte d√©mo a √©t√© cr√©√© avec succ√®s.');
    console.log('');
    console.log('üìù INFORMATIONS DE CONNEXION:');
    console.log('   Email: demo@newbi.fr');
    console.log('   Mot de passe: Test_123@');
    console.log('');
    console.log('üåê Vous pouvez maintenant vous connecter √† l\'application avec ces identifiants.');
    
  } catch (error) {
    console.error('');
    console.error('‚ùå ERREUR lors de la cr√©ation du compte d√©mo:');
    console.error(error.message);
    console.error('');
    console.error('üí° SOLUTIONS POSSIBLES:');
    console.error('   ‚Ä¢ V√©rifiez que MongoDB est d√©marr√©');
    console.error('   ‚Ä¢ V√©rifiez la configuration de MONGODB_URI');
    console.error('   ‚Ä¢ V√©rifiez les permissions d\'√©criture sur la base de donn√©es');
    console.error('');
    console.error('üîç D√âTAILS TECHNIQUES:');
    console.error(error.stack);
    process.exit(1);
  }
}

// Gestion des signaux d'interruption
process.on('SIGINT', () => {
  console.log('');
  console.log('‚ö†Ô∏è  Interruption d√©tect√©e. Arr√™t du script...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('');
  console.log('‚ö†Ô∏è  Terminaison d√©tect√©e. Arr√™t du script...');
  process.exit(0);
});

// Ex√©cution du script principal
main();
